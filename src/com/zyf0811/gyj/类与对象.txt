	Java 类 --  class  功能类 
	
	
		
	类与对象 -- 面向对象  
		程序： 解决问题  
		网购： 
			考虑： 现实交易
				卖家：货品
				买家： 货币
		网上交易程序：
			类：	卖家：特征:（货品   收款账户   地址  电话  姓名 ...）
					功能：上货  下架  标价    处理订单  发货  客服
				买家：特征: （货币  付款账户   地址  电话  姓名 ...）
					功能： 浏览商品  加购物车 下订单  付款 ..
		注册-> 注册信息表-> 账号->登录-> 使用功能 		
		
				通过类构造对象		对象调用方法
									
				处理流程：
				
					结合前端界面组件调用方法 
					
						
	类：	具有相同的、相似的特征、属性、行为方式、功能的一类事物的集合  
		程序中： 具有一类对象相同的属性、方法的类模板代码 
			
	对象：具体的事物 ，一个事物就是一个对象 
		程序中： 由类创建/实例化的，存在于内存中。
		程序不运行: 不存在对象  
		int[] i =new int[10000000];
	
	类的编写：
		关键字：class 格式： public  class 类名{ }  类名首字母大写
	属性： 可以由一个数据，一个变量可以表达的 
		格式： 属性类型   属性变量名；- 类成员变量 
		 
		 类型： 
		 	基本数据类型 ： int long double  char 
		 	     类数据类型： String 只要是一个类就可以作为一种类型存在 
	
	方法：行为/功能的描述  	-- 类成员方法 
		格式： 访问修饰符 返回值类型 方法名（参数类型 参数变量名）{   }
			public  void test(int n){}
			
	返回值:	返回到 调用这个方法的式子上   
				类型			return
			有：	int/String	  return 10/"name";	
			空：void 			不需要return
		
		int n = test();
			n? 的值 = 10	
		public int  test(){
			
			return 10;
			
		}	
	
	参数： 参数当作方法的局部变量，只能在方法中使用，可以与类成员变量名重名，但是就近使用参数。
		单个（参数类型 参数变量名）
		多个（参数类型1 参数变量名1，参数类型1 参数变量名2，参数类型2 参数变量名3）
		空

	创建对象
		类名  对象变量名 = new 类名（）；
		
			同类型的对象的属性是独立的吗？  
 		
	程序：
		主方法：
		public static void main(String[] args){
			// 创建对象 
		
		}

	// 电脑 类 
		属性： 品牌  型号  温度  电量 
		方法：  写代码  写文档 看视频  听歌 





