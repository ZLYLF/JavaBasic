	类与对象 - -- 面向对象    
	
 		程序： 解决问题  
 			
		网购： 
			交易:  卖家 (货物)
				 买家（货币）
		网上交易：
		类：	卖家 (货物  付款账户   地址 电话   姓名 ....                   )
				功能： 上货  下架 标价  处理订单  客服
			 买家（货币  收款账户 收货地址 电话 姓名 .....           ）
				功能： 浏览  加购物车  下单 支付 .... 
				
	注册 - > 注册信息表 ->  账号 -> 使用功能 
		      构造对象   -  > 对象调用方法
		      
		类：具有相同、相似的属性、特征、行为方式、功能的一类事物的集合 
			
			程序中：  具有这一类对象的属性、功能的一份代码 
			
		对象： 具体的事物 
		
			程序中： 由类创建的，存在于内存中 
			int[] is= new int[10];
		
	类的编写：
		关键字： class 
		格式： public class 类名{ }	
		属性：可以由一个数据、变量表达的  
			格式： 属性类型 属性变量名；int age; String name;
			类型：
				基本数据类型： int double char
				类数据类型：  String   更高级 更复杂  只要是一个类就可以作为数据类型 
			
		
		方法：行为、功能的描述 
			格式： 访问修饰符   返回值类型 方法名（参数类型 参数变量名）{
				// 方法体 
				}
			public  
			
			返回值：  返回值类型			方法体中 
				有： int / String  	return 10/"name";
				空：	void 				不需要return
				无：	构造方法  没有返回值结构
			
			参数：
				有：	
					单个：参数类型 参数变量名
					多个：（参数类型1 参数变量名1，参数类型1 参数变量名2，参数类型2 参数变量名3）
				无：	
			方法重载：
				根据参数的有无，类型，数量 ，顺序	
				同名的方法 

	程序：	
		程序入口：
			public static void main(String[] args){
				// 输出语句
				System.out.print();
				// 换行  print 后加  ln
				System.out.println(); - line
			}
	
	类创建对象：
		关键字： new 
		格式： 类名   对象变量名 = new 类名（）；
		每个对象都是独立的，有自己的属性
	
	
	this 关键字
		指代的这个对象在代码的自己 

	Object Java中所有类的父类 

	// 练习：
		电脑：
		属性：品牌  型号  电量  温度  
		方法： 写代码  运行程序  看视频 
		
		
		
		
		


