类与对象 -- 面向对象 

	程序：解决问题  来源用处？
	
	网购：卖家 （商品	收款账户   发货地址  电话  姓名	...	）  
		  	功能：上货   控制库存  定价格 处理订单  发货 
		   买家（货币	付款账户   收货地址  电话  姓名	...	）
			功能： 浏览商品  加购物车  下单  支付 ...
	注册 -> 注册信息表 -> 账户 -> 使用功能  
			类 		构造对象	- 对象调用方法 /函数 
			
	现实中购买：	卖家 （商品）  
				买家（货币）

		类：具有相同或相似的属性、特征、行为方式、功能的一类事物的集合 
			程序中： 具有相同或相似的属性、特征、行为方式、功能的一类对象的模板 
		
			int 整数类型 
		
		对象：具体的事物 
			程序中： 由类创建的，存在于内存中    程序运行就有  程序关闭就没了（只是一行代码）

	类的编写：	
			关键字： class  
			格式： public　class 类名{  }
		属性：一个数据、一个变量可以表达的 -- String name; int age;
			格式：访问修饰符 数据/属性类型   属性变量名；
			类型：基本数据类型： int double char  
				       类数据类型：String 只要是一个类 就可以作为一种类型 
		
		方法： 行为/功能的描述
			格式： 访问修饰符   返回值类型  方法名（参数类型 参数变量名）{
				// 方法体
			}
		 访问修饰符  ： public   -- 默认的/ 不写  	
		 返回值：	 返回到调用方法的这行代码上 
		 		有：  类型 -  int /  String       return 10/"Str";  需要返回对应类型的数据/变量
		 		空：	 类型 - void  					不需要返回 
		 		无：	构造方法 - 无返回值结构
		 参数：  可以看作方法的局部变量，名称可与类属性名一致，在方法种就近使用参数变量名 
		 	有：
		 		单个：（参数类型 参数变量名）  (int count)
		 		多个:    (int count,String name,int age)
		 	
		 	无：空着 
		 	
		 	
	程序：
		类创建对象  
			关键字：new  
			格式： 类名   对象变量名= new 类名（）；
		
		创建对象时发生了什么事情？
			1、对象复制了一份属性、方法存在自己的内存空间中 
			2、对象都是独立的
		对象调用属性和方法；
			对象名.属性 >>>
			对象名.方法名（）；
		
	主方法：
	// 程序入口 -- 一个程序一次启动只能启动一个程序入口 
	// 可以写在任何一个类中/或者单独写一个类 
	public static void main(String[] args){
	// 输出打印语句
	System.out.print("name"+name);
	System.out.println("name"+name);// print后加ln 就是换行 
	}


	// 练习 ： 
			找一个事物 ：
			属性： --- 
			方法： ---
			
			创建对象 给属性赋值  对象调用方法 
			
	Java 继承  类与类之间的关系 	王者的英雄架构  		
	
	
	
	
	
	







